System.register(["jimu-core","jimu-ui/advanced/data-source-selector","jimu-ui/advanced/setting-components"],(function(e,t){var o={},a={},r={};return{setters:[function(e){o.Immutable=e.Immutable,o.React=e.React,o.getAppStore=e.getAppStore,o.jsx=e.jsx},function(e){a.FieldSelector=e.FieldSelector},function(e){r.SettingSection=e.SettingSection}],execute:function(){e((()=>{"use strict";var e={8891:e=>{e.exports=o},338:e=>{e.exports=a},7756:e=>{e.exports=r}},t={};function s(o){var a=t[o];if(void 0!==a)return a.exports;var r=t[o]={exports:{}};return e[o](r,r.exports,s),r.exports}s.d=(e,t)=>{for(var o in t)s.o(t,o)&&!s.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var i={};return(()=>{s.r(i),s.d(i,{default:()=>r});var e=s(8891),t=s(338),o=s(7756);class a extends e.React.PureComponent{constructor(){super(...arguments),this.getInitConfig=()=>{const t=this.props.messageWidgetId,o=(0,e.getAppStore)().getState().appStateInBuilder.appConfig.widgets[t];let a=null;return this.props.config.useDataSource?a=this.props.config.useDataSource:o&&o.useDataSources&&o.useDataSources[0]&&1===o.useDataSources.length&&(a=(0,e.Immutable)({dataSourceId:o.useDataSources[0].dataSourceId,mainDataSourceId:o.useDataSources[0].mainDataSourceId,dataViewId:o.useDataSources[0].dataViewId,rootDataSourceId:o.useDataSources[0].rootDataSourceId})),{useDataSource:a}},this.getDsSelectorSourceData=t=>{var o,a,r;const s=null===(a=null===(o=(0,e.getAppStore)().getState())||void 0===o?void 0:o.appStateInBuilder)||void 0===a?void 0:a.appConfig,i=null===(r=null==s?void 0:s.widgets)||void 0===r?void 0:r[t];return i&&i.useDataSources},this.onFieldSelected=(e,t)=>{const o=e[0];o&&this.props.config.useDataSource&&this.props.onSettingChange({actionId:this.props.actionId,config:this.props.config.set("fieldName",o.name).set("useDataSource",{dataSourceId:this.props.config.useDataSource.dataSourceId,mainDataSourceId:this.props.config.useDataSource.mainDataSourceId,dataViewId:this.props.config.useDataSource.dataViewId,rootDataSourceId:this.props.config.useDataSource.rootDataSourceId,fields:e.map((e=>e.jimuName))})})}}componentDidMount(){const e=this.getInitConfig();this.props.onSettingChange({actionId:this.props.actionId,config:this.props.config.set("useDataSource",e.useDataSource)})}render(){const a=this.getDsSelectorSourceData(this.props.widgetId);return(0,e.jsx)("div",null,(0,e.jsx)(o.SettingSection,{title:"Select field"},a&&a.length>0&&(0,e.jsx)("div",{className:"mt-2"},"Please choose a Field to query:",(0,e.jsx)(t.FieldSelector,{useDataSources:a,onChange:this.onFieldSelected,selectedFields:this.props.config.useDataSource&&this.props.config.useDataSource.fields?this.props.config.useDataSource.fields:(0,e.Immutable)([])}))))}}a.defaultProps={config:(0,e.Immutable)({useDataSource:null})};const r=a})(),i})())}}}));