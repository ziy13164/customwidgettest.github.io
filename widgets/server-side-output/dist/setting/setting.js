System.register(["jimu-core","jimu-ui/advanced/sql-expression-builder","jimu-ui/basic/sql-expression-runtime","jimu-ui/advanced/data-source-selector","jimu-ui"],(function(e,t){var s={},r={},a={},o={},i={};return{setters:[function(e){s.DataSourceManager=e.DataSourceManager,s.DataSourceTypes=e.DataSourceTypes,s.Immutable=e.Immutable,s.React=e.React,s.SqlExpressionMode=e.SqlExpressionMode},function(e){r.SqlExpressionBuilderPopup=e.SqlExpressionBuilderPopup},function(e){a.getJimuFieldNamesBySqlExpression=e.getJimuFieldNamesBySqlExpression},function(e){o.DataSourceSelector=e.DataSourceSelector},function(e){i.Button=e.Button}],execute:function(){e((()=>{var e={8891:e=>{"use strict";e.exports=s},726:e=>{"use strict";e.exports=i},338:e=>{"use strict";e.exports=o},3484:e=>{"use strict";e.exports=r},5506:e=>{"use strict";e.exports=a}},t={};function u(s){var r=t[s];if(void 0!==r)return r.exports;var a=t[s]={exports:{}};return e[s](a,a.exports,u),a.exports}u.d=(e,t)=>{for(var s in t)u.o(t,s)&&!u.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},u.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),u.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},u.p="";var n={};return u.p=window.jimuConfig.baseUrl,(()=>{"use strict";u.r(n),u.d(n,{__set_webpack_public_path__:()=>i,default:()=>o});var e=u(8891),t=u(3484),s=u(5506),r=u(338),a=u(726);class o extends e.React.PureComponent{constructor(t){super(t),this.supportedTypes=(0,e.Immutable)([e.DataSourceTypes.FeatureLayer]),this.onDataSourceChange=t=>{var s;if((null==t?void 0:t.length)>0){const r=null===(s=t[0])||void 0===s?void 0:s.dataSourceId,a=e.DataSourceManager.getInstance().getDataSource(r),o=[{id:`${this.props.id}-ouput`,type:e.DataSourceTypes.FeatureLayer,label:`${this.props.manifest.name}-output-data-source`,geometryType:a.getDataSourceJson().geometryType,originDataSources:[t[0]],url:a.getDataSourceJson().url,itemId:a.getDataSourceJson().itemId,layerId:a.getDataSourceJson().layerId,portalUrl:a.getDataSourceJson().portalUrl,isDataInDataSourceInstance:a.getDataSourceJson().isDataInDataSourceInstance}];this.props.onSettingChange({id:this.props.id,useDataSources:t},o)}},this.onSqlExpressionChange=e=>{const t=(0,s.getJimuFieldNamesBySqlExpression)(e),r=this.props.useDataSources[0].set("fields",t).asMutable({deep:!0});this.props.onSettingChange({id:this.props.id,useDataSources:[r],config:{sqlExpression:e}})},this.toggleSqlBuilder=()=>this.setState({isSqlBuilderOpen:!this.state.isSqlBuilderOpen}),this.state={isSqlBuilderOpen:!1}}render(){var s,o;const i=null===(o=null===(s=this.props.useDataSources)||void 0===s?void 0:s[0])||void 0===o?void 0:o.dataSourceId,u=i&&e.DataSourceManager.getInstance().getDataSource(i);return e.React.createElement("div",{className:"setting-attribute-query-result-as-output p-2"},e.React.createElement(r.DataSourceSelector,{mustUseDataSource:!0,types:this.supportedTypes,useDataSources:this.props.useDataSources,useDataSourcesEnabled:this.props.useDataSourcesEnabled,onChange:this.onDataSourceChange,widgetId:this.props.id}),u&&e.React.createElement("div",{className:"mt-2"},e.React.createElement(a.Button,{onClick:this.toggleSqlBuilder},"Click to set a SQL expression")),e.React.createElement(t.SqlExpressionBuilderPopup,{dataSource:u,mode:e.SqlExpressionMode.Simple,expression:this.props.config.sqlExpression,onChange:this.onSqlExpressionChange,isOpen:this.state.isSqlBuilderOpen,toggle:this.toggleSqlBuilder}))}}function i(e){u.p=e}})(),n})())}}}));